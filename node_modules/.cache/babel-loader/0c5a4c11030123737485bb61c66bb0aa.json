{"ast":null,"code":"import React from 'react';\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber.js';\nimport Flex from '../Flex.js';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates.js';\nimport { mapCalendarType } from '../shared/utils.js';\nexport default function WeekNumbers(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarTypeOrDeprecatedCalendarType = props.calendarType,\n      onClickWeekNumber = props.onClickWeekNumber,\n      onMouseLeave = props.onMouseLeave,\n      showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n  var calendarType = mapCalendarType(calendarTypeOrDeprecatedCalendarType);\n\n  var numberOfWeeks = function () {\n    if (showFixedNumberOfWeeks) {\n      return 6;\n    }\n\n    var numberOfDays = getDaysInMonth(activeStartDate);\n    var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n    var days = numberOfDays - (7 - startWeekday);\n    return 1 + Math.ceil(days / 7);\n  }();\n\n  var dates = function () {\n    var year = getYear(activeStartDate);\n    var monthIndex = getMonth(activeStartDate);\n    var day = getDate(activeStartDate);\n    var result = [];\n\n    for (var index = 0; index < numberOfWeeks; index += 1) {\n      result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n    }\n\n    return result;\n  }();\n\n  var weekNumbers = dates.map(function (date) {\n    return getWeekNumber(date, calendarType);\n  });\n  return React.createElement(Flex, {\n    className: \"react-calendar__month-view__weekNumbers\",\n    count: numberOfWeeks,\n    direction: \"column\",\n    onFocus: onMouseLeave,\n    onMouseOver: onMouseLeave,\n    style: {\n      flexBasis: 'calc(100% * (1 / 8)',\n      flexShrink: 0\n    }\n  }, weekNumbers.map(function (weekNumber, weekIndex) {\n    var date = dates[weekIndex];\n\n    if (!date) {\n      throw new Error('date is not defined');\n    }\n\n    return React.createElement(WeekNumber, {\n      key: weekNumber,\n      date: date,\n      onClickWeekNumber: onClickWeekNumber,\n      weekNumber: weekNumber\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/nikhi/Downloads/easybooking/easybooking/node_modules/react-calendar/dist/esm/MonthView/WeekNumbers.js"],"names":["React","getYear","getMonth","getDate","getDaysInMonth","WeekNumber","Flex","getBeginOfWeek","getDayOfWeek","getWeekNumber","mapCalendarType","WeekNumbers","props","activeStartDate","calendarTypeOrDeprecatedCalendarType","calendarType","onClickWeekNumber","onMouseLeave","showFixedNumberOfWeeks","numberOfWeeks","numberOfDays","startWeekday","days","Math","ceil","dates","year","monthIndex","day","result","index","push","Date","weekNumbers","map","date","createElement","className","count","direction","onFocus","onMouseOver","style","flexBasis","flexShrink","weekNumber","weekIndex","Error","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber.js';\nimport Flex from '../Flex.js';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates.js';\nimport { mapCalendarType } from '../shared/utils.js';\nexport default function WeekNumbers(props) {\n    var activeStartDate = props.activeStartDate, calendarTypeOrDeprecatedCalendarType = props.calendarType, onClickWeekNumber = props.onClickWeekNumber, onMouseLeave = props.onMouseLeave, showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n    var calendarType = mapCalendarType(calendarTypeOrDeprecatedCalendarType);\n    var numberOfWeeks = (function () {\n        if (showFixedNumberOfWeeks) {\n            return 6;\n        }\n        var numberOfDays = getDaysInMonth(activeStartDate);\n        var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n        var days = numberOfDays - (7 - startWeekday);\n        return 1 + Math.ceil(days / 7);\n    })();\n    var dates = (function () {\n        var year = getYear(activeStartDate);\n        var monthIndex = getMonth(activeStartDate);\n        var day = getDate(activeStartDate);\n        var result = [];\n        for (var index = 0; index < numberOfWeeks; index += 1) {\n            result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n        }\n        return result;\n    })();\n    var weekNumbers = dates.map(function (date) { return getWeekNumber(date, calendarType); });\n    return (React.createElement(Flex, { className: \"react-calendar__month-view__weekNumbers\", count: numberOfWeeks, direction: \"column\", onFocus: onMouseLeave, onMouseOver: onMouseLeave, style: { flexBasis: 'calc(100% * (1 / 8)', flexShrink: 0 } }, weekNumbers.map(function (weekNumber, weekIndex) {\n        var date = dates[weekIndex];\n        if (!date) {\n            throw new Error('date is not defined');\n        }\n        return (React.createElement(WeekNumber, { key: weekNumber, date: date, onClickWeekNumber: onClickWeekNumber, weekNumber: weekNumber }));\n    })));\n}\n"]},"metadata":{},"sourceType":"module"}